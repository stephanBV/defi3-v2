{"version":3,"sources":["utils/load-contract.js","components/Add_Voter.js","components/Update_Status.js","components/Add_Proposal.js","components/Vote_Proposal.js","components/Getters.js","components/Tally_Votes.js","App.js","reportWebVitals.js","index.js"],"names":["loadContract","name","provider","a","fetch","res","json","Artifact","_contractTruffle","contract","setProvider","deployed","deployedContract","Contract","require","abi","address","web3Contract","AddVoter","props","useState","inputValue","setInputValue","workflowStatus","Button","variant","disabled","placeholder","value","onChange","event","target","onClick","instance","methods","addVoter","send","from","admin","on","alert","then","events","VoterRegistered","once","returnValues","voterAddress","UpdateStatus","WorkflowStatus","0","1","2","3","4","5","updateStatus","statusNumber","setWorkflowStatus","startProposalsRegistering","WorkflowStatusChange","previousStatus","newStatus","Number","endProposalsRegistering","startVotingSession","endVotingSession","DropdownButton","id","title","Dropdown","Item","AddProposal","voter","addProposal","ProposalRegistered","proposalId","VoteProposal","setVote","Voted","Getter","addrValue","setInputAddr","propIdValue","setInputPropId","map","obj","fun","Object","entries","reduce","prev","key","getVoter","call","_getVoter","hasVoted","isRegistered","votedProposalId","getOneProposal","_getOneProposal","description","getResults","getWinners","_getWinners","_getWObj","_","winner","keys","length","values","InputGroup","className","FormControl","TallyVotes","onSubmit","countVotes","App","isProviderLoaded","web3","myWeb3Api","setMyWeb3Api","balance","setBalance","account","setAccount","shouldReload","setAdmin","canConnectToContract","setAccountListener","window","location","reload","useEffect","detectEthereumProvider","console","log","Web3","api","error","loadProvider","getAccount","_web3","eth","getAccounts","accounts","checkSumAddress","utils","toChecksumAddress","assert","checkAddressChecksum","loadBalance","getBalance","fromWei","loadWorkflowStatus","_contract","status","owner","style","display","justifyContent","alignItems","height","request","method","rel","href","ws","marginBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e87fe848.chunk.js","sourcesContent":["import contract from \"@truffle/contract\"\n\nexport const loadContract = async (name, provider) => {\n  const res = await fetch(`/contracts/${name}.json`)\n  const Artifact = await res.json()\n\n  const _contractTruffle = contract(Artifact)\n  _contractTruffle.setProvider(provider)\n\n  const deployedContract = await _contractTruffle.deployed()\n\n\n  var Contract = require('web3-eth-contract');\n  Contract.setProvider(provider);\n  var web3Contract = await new Contract(Artifact.abi, deployedContract.address);\n\n  // return deployedContract\n  return web3Contract\n}","import { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\n\nfunction AddVoter(props) {\n    const [inputValue, setInputValue] = useState('');\n    const onChangeInput = (event) => {\n        setInputValue(event.target.value);\n      }\n    \n    const onSubmit = () => {\n        const contract = props.instance;\n        contract.methods.addVoter(inputValue).send({from: props.admin})\n            .on('error', function(){ alert(\"Voter is already registered\") })\n            .then(contract.events.VoterRegistered()\n            .once('data', function(event) {\n                alert(`Event successful! ${event.event} with voterAddress:\\n ${event.returnValues.voterAddress}`)\n            })\n        )\n        setInputValue('')\n    }\n    return (\n          <>\n          { props.workflowStatus > 0 ?\n            <Button variant=\"secondary\" disabled>Register Voter</Button> :\n            <>\n              <input placeholder='Enter Address' value={inputValue || ''} onChange={onChangeInput} />\n              <Button variant=\"success\" onClick={onSubmit}>Register Voter</Button>\n            </>\n          }\n         </>\n    )\n}\n\nexport default AddVoter;","import DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction UpdateStatus(props) {\n      const WorkflowStatus = {\n        0: 'RegisteringVoters',\n        1: 'ProposalsRegistrationStarted',\n        2: 'ProposalsRegistrationEnded',\n        3: 'VotingSessionStarted',\n        4: 'VotingSessionEnded',\n        5: 'VotesTallied'\n    }\n    const updateStatus = (statusNumber) => {\n        const contract = props.instance;\n        const admin = props.admin;\n        const setWorkflowStatus = props.setWorkflowStatus\n        switch (statusNumber) {\n          case 1: \n            contract.methods.startProposalsRegistering().send({from: admin})\n            .on('error', function(){ alert(\"That status has previously been selected!\") })\n            .then(contract.events.WorkflowStatusChange()\n              .once('data', function(event) {\n                alert(`${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`)\n                setWorkflowStatus(Number(event.returnValues.newStatus))\n              })\n            )\n            break;\n          case 2: \n            contract.methods.endProposalsRegistering().send({from: admin})\n            .on('error', function(){ alert(\"That status has previously been selected!\") })\n            .then(contract.events.WorkflowStatusChange()\n              .once('data', function(event) {\n                alert(`${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`)\n                setWorkflowStatus(Number(event.returnValues.newStatus))\n              })\n            )\n            break;\n          case 3: \n            contract.methods.startVotingSession().send({from: admin})\n            .on('error', function(){ alert(\"You clearly did something wrong. Try again mate!\") })\n            .then(contract.events.WorkflowStatusChange()\n              .once('data', function(event) {\n                alert(`${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`)\n                setWorkflowStatus(Number(event.returnValues.newStatus))\n              })\n            )\n            break;\n          case 4:\n            contract.methods.endVotingSession().send({from: admin})\n            .on('error', function(){ alert(\"Transaction denied!\") })\n            .then(contract.events.WorkflowStatusChange()\n              .once('data', function(event) {\n                setWorkflowStatus(Number(event.returnValues.newStatus))\n                alert(`${event.event} from ${WorkflowStatus[event.returnValues.previousStatus]} to ${WorkflowStatus[event.returnValues.newStatus]}`)\n              })\n            )\n            break;\n          default:\n            alert(\"wrong status\")\n        }\n      }\n      return (\n          <>\n          <DropdownButton id=\"dropdown-basic-button\" title=\"Update Voting Status\">\n            { props.workflowStatus !== 0 ?\n                <Dropdown.Item  onClick={() => updateStatus(1)} disabled>Start Proposals Registering</Dropdown.Item> :\n                <Dropdown.Item  onClick={() => updateStatus(1)} >Start Proposals Registering</Dropdown.Item>\n            }\n            { props.workflowStatus !== 1 ?\n                <Dropdown.Item  onClick={() => updateStatus(2)} disabled>End Proposals Registering</Dropdown.Item> :\n                <Dropdown.Item  onClick={() => updateStatus(2)}>End Proposals Registering</Dropdown.Item>\n            }\n            { props.workflowStatus !== 2 ?\n            <Dropdown.Item  onClick={() => updateStatus(3)} disabled>Start Voting Session</Dropdown.Item> :\n            <Dropdown.Item  onClick={() => updateStatus(3)}>Start Voting Session</Dropdown.Item>\n            }\n           { props.workflowStatus !== 3 ?\n            <Dropdown.Item  onClick={() => updateStatus(4)} disabled>End Voting Session</Dropdown.Item> :\n            <Dropdown.Item  onClick={() => updateStatus(4)}>End Voting Session</Dropdown.Item>\n           }\n          </DropdownButton>\n          </>\n      )\n}\n\nexport default UpdateStatus;","import { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\n\nfunction AddProposal(props) {\n    const voter = props.voter\n    const [inputValue, setInputValue] = useState('');\n    const onChangeInput = (event) => {\n        setInputValue(event.target.value);\n      }\n    const onSubmit = () => {\n        const contract = props.instance;\n        contract.methods.addProposal(inputValue).send({from: voter})\n            .on('error', function(){ alert(\"You clearly did something wrong. Do it again!\") })\n            .then(contract.events.ProposalRegistered()\n            .once('data', function(event) {\n                alert(`Your proposal has been registered!  \\n proposal ID: ${event.returnValues.proposalId}`)\n            })\n        )\n        setInputValue('')\n    }\n    return (\n          <>\n          { props.workflowStatus !== 1 ?\n            <Button variant=\"secondary\" disabled>Register Proposal</Button> :\n            <>\n            <input placeholder='Enter proposal' value={inputValue || ''} onChange={onChangeInput} />\n            <Button variant=\"success\" onClick={onSubmit}>Register Proposal</Button>\n            </>\n          }\n         </>\n    )\n}\n\nexport default AddProposal;","import { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\n\nfunction VoteProposal(props) {\n    const voter = props.voter\n    const contract = props.instance\n    const workflowStatus = props.workflowStatus\n    const [inputValue, setInputValue] = useState('');\n    const onChangeInput = (event) => {\n        setInputValue(event.target.value);\n      }\n    const onSubmit = () => {\n        contract.methods.setVote(inputValue).send({from: voter})\n            .on('error', function(){ alert(\"You clearly did something wrong. Come back later hay?!\") })\n            .then(contract.events.Voted() \n            .once('data', function(event) {\n                alert(`Success! has ${event.event} with voter:\\n ${event.returnValues.voter} \\n and proposalId: ${event.returnValues.proposalId}`)\n            })\n        )\n        setInputValue('')\n    }\n    return (\n          <>\n          { workflowStatus !== 3 ?\n            <Button variant=\"secondary\" disabled>Vote For Proposal</Button> :\n            <>\n            <input placeholder='Enter Proposal ID' value={inputValue || ''} onChange={onChangeInput} />\n            <Button variant=\"success\" onClick={onSubmit}>Vote For Proposal</Button>\n            </>\n          }\n         </>\n    )\n}\n\nexport default VoteProposal;","\nimport { useState } from \"react\";\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nfunction Getter(props) {\n    const contract = props.instance;\n    const voter = props.voter;\n    const workflowStatus = props.workflowStatus;\n    const [addrValue, setInputAddr] = useState('');\n    const [propIdValue, setInputPropId] = useState('');\n\n    const onChangeAddr = (event) => {\n        setInputAddr(event.target.value)\n      };\n\n    const onChangePropId = (event) => {\n        setInputPropId(event.target.value)\n    };\n\n    // custom map function for object from the getter of the getWinners function (previously TallyVotesDraw)\n    const map = (obj, fun) =>\n        Object.entries(obj).reduce(\n            (prev, [key, value]) => ({\n                ...prev,\n                [key]: fun(key, value)\n            }),\n        {}\n    );\n\n    const getVoter = async () => {\n        try{\n            const _getVoter = await contract.methods.getVoter(addrValue).call({from: voter})\n            alert(`Voter ${addrValue} \\n hasVoted: ${_getVoter.hasVoted} \\n isRegistered: ${_getVoter.isRegistered} \\n voterProposalId: ${_getVoter.votedProposalId}`)\n            \n        } catch(_) {\n            alert(\"Well that did't go the way you wanted hu?! \\nYou're either not registered or the address is messed up! Go figure it out mate!\")\n        }    \n        setInputAddr('')\n    }\n    const getOneProposal = async () => {\n        try {\n            const _getOneProposal = await contract.methods.getOneProposal(propIdValue).call()\n            alert(`Proposal ID ${propIdValue} is ${_getOneProposal.description}`)\n        } catch(_) {\n            alert('wrong proposal bruh..')\n        }\n        setInputPropId('')\n    }\n    const getResults = async () => {\n        const _getWinners = await contract.methods.getWinners().call()\n        // take _getWinner object and map content to get only the descriptions\n        const _getWObj = map(_getWinners, (_, winner) => winner.description)\n        if (Object.keys(_getWObj).length > 1) {\n            alert(`==> ${Object.values(_getWObj)} <==`)\n        } else {\n            alert(`==> ${_getWinners[0][0]} <==`)\n        }\n    }\n\n    return (\n        <>\n        <DropdownButton id=\"dropdown-basic-button\" title=\"Getters\">\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder='Enter Address' value={addrValue || ''}  onChange={onChangeAddr} \n                />\n                <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={getVoter}>\n                getVoter\n                </Button>    \n            </InputGroup>\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"Enter Proposal Id\" value={propIdValue || ''}  onChange={onChangePropId} \n                />\n                <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={getOneProposal}>\n                getOneProposal\n                </Button>\n            </InputGroup>\n            <InputGroup className=\"mb-3\">\n                { workflowStatus !== 5 ?\n                    <Button variant=\"outline-secondary\" id=\"button-addon2\" onClick={getResults} disabled>Election Result</Button>\n                    : <Button variant=\"outline-primary\" id=\"button-addon2\" onClick={getResults} >Election Result</Button>\n                }\n            </InputGroup>\n        </DropdownButton>\n        </>\n    )\n}\n\nexport default Getter;","import Button from 'react-bootstrap/Button';\n\nfunction TallyVotes(props) {\n    const contract = props.instance\n    const admin = props.admin\n    const workflowStatus = props.workflowStatus\n    const WorkflowStatus = {\n        4: 'VotingSessionEnded',\n        5: 'VotesTallied'\n    }\n    const setWorkflowStatus = props.setWorkflowStatus\n\n    const onSubmit = () => {\n        contract.methods.countVotes().send({from: admin})\n            .on('error', function(){ alert(\"You clearly did something wrong. try again boii!\") })\n            .then(contract.events.WorkflowStatusChange()\n            .once('data', function(event) {\n                alert(`Event successful! ${event.event} \\n from: ${WorkflowStatus[event.returnValues.previousStatus]} \\n to: ${WorkflowStatus[event.returnValues.newStatus]}`)\n            })\n        )\n        setWorkflowStatus(5)\n    }\n    return (\n          <>\n          { workflowStatus !== 4  ?\n            <Button variant=\"secondary\" onClick={onSubmit} disabled>Tally Votes</Button> :\n            workflowStatus === 5 ?\n            <Button variant=\"secondary\" onClick={onSubmit} disabled>Tally Votes</Button> :\n            <Button variant=\"success\" onClick={onSubmit}>Tally Votes</Button> \n          }\n         </>\n    )\n}\n\nexport default TallyVotes;","import { useCallback, useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//|::: Libraries for setup :::|\nimport Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport { loadContract } from \"./utils/load-contract\";\n\n//|::: Components :::|\nimport AddVoter from './components/Add_Voter';\nimport UpdateStatus from './components/Update_Status'\nimport AddProposal from './components/Add_Proposal'\nimport VoteProposal from './components/Vote_Proposal'\nimport Getter from './components/Getters'\nimport TallyVotes from './components/Tally_Votes'\n\nfunction App() {\n  const [myWeb3Api, setMyWeb3Api] = useState({\n    provider: null,\n    isProviderLoaded: false,\n    web3: null,\n    contract: null\n  })\n\n  const [balance, setBalance] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [shouldReload, reload] = useState(false)\n  const [workflowStatus, setWorkflowStatus] = useState(null)\n  const [admin, setAdmin] = useState(null)\n  const currentStatus = {\n    0 : \"RegisteringVoters\",\n    1 : \"ProposalsRegistrationStarted\",\n    2 : \"ProposalsRegistrationEnded\",\n    3 : \"VotingSessionStarted\",\n    4 : \"VotingSessionEnded\",\n    5 : \"VotesTallied\"\n    }\n\n  const canConnectToContract = account && myWeb3Api.contract\n\n  const setAccountListener = provider => {\n    provider.on(\"accountsChanged\", _ => window.location.reload())\n    provider.on(\"chainChanged\", _ => window.location.reload())\n  }\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider()\n      console.log('provider', provider)\n\n      if (provider) {\n        setAccountListener(provider)\n        const contract= await loadContract(\"Voting_cyril\", provider)\n        console.log('contract', contract)\n        setMyWeb3Api({\n          web3: new Web3(provider),\n          provider,\n          contract,\n          isProviderLoaded: true\n        })\n      } else {\n        setMyWeb3Api(api => ({...api, isProviderLoaded: true}))\n        console.error(\"Please, install Metamask.\")\n      }\n    }\n\n    loadProvider()\n  }, [])\n\n  useEffect(() => {\n    const getAccount = async () => {\n      const _web3  = myWeb3Api.web3\n      const accounts = await _web3.eth.getAccounts()\n      const checkSumAddress = _web3.utils.toChecksumAddress(accounts[0]) \n      console.assert(_web3.utils.checkAddressChecksum(checkSumAddress), \"checksum test failed\") //check the address passed the checksum test\n      setAccount(checkSumAddress)\n    }\n    myWeb3Api.web3 && getAccount()\n  }, [myWeb3Api.web3])\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      const _web3  = myWeb3Api.web3\n      const balance = await _web3.eth.getBalance(account)\n      setBalance(_web3.utils.fromWei(balance, \"ether\"))\n    }\n    myWeb3Api.web3 && account && loadBalance()\n  }, [myWeb3Api.web3, shouldReload, account])\n\n  useEffect(() => {\n    const loadWorkflowStatus = async () => {\n    const _contract  = myWeb3Api.contract\n    const status = await _contract.methods.workflowStatus().call()\n    setWorkflowStatus(Number(status))\n    const admin = await _contract.methods.owner().call();\n    setAdmin(admin)\n    }\n    myWeb3Api.contract && loadWorkflowStatus()\n  },[myWeb3Api.contract, shouldReload])\n\n  return (\n    <>\n      <div className=\"defi3-wrapper\" style={{display: 'flex',  justifyContent:'center', alignItems:'center',\n        height: '30rem'}}>\n        <div className=\"defi3\">\n          { myWeb3Api.isProviderLoaded ?\n            <div className=\"is-flex is-align-items-center\">\n              <span>\n                <strong className=\"mr-2\">Account: </strong>\n              </span>\n                { account ?\n                  <div>{account}</div> :\n                  !myWeb3Api.provider ?\n                  <>\n                    <div className=\"notification is-warning is-size-6 is-rounded\">\n                      Wallet is not detected!{` `}\n                      <a\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                        href=\"https://docs.metamask.io\">\n                        Install Metamask\n                      </a>\n                    </div>\n                  </> :\n                  <button\n                    className=\"button is-small\"\n                    onClick={() =>\n                      myWeb3Api.provider.request({method: \"eth_requestAccounts\"}\n                    )}\n                  >\n                    Connect Wallet\n                  </button>\n                }\n            </div> :\n            <span>Looking for Web3...</span>\n          }\n          { !canConnectToContract &&\n            <i className=\"is-block\">\n              Connect to network\n            </i>\n          }\n          <div className=\"balance-view is-size-2 my-4\">\n            Current Balance: <strong>{balance}</strong> ETH\n          </div>\n          <div className=\"workflowStatus-view is-size-2 my-4\">\n            Ongoing Workflow Status: {workflowStatus}-{currentStatus[workflowStatus]}\n          </div>\n          <UpdateStatus  instance={myWeb3Api.contract} admin={admin} setWorkflowStatus={(ws) => setWorkflowStatus(ws)} workflowStatus={workflowStatus}/>\n          <div style={{marginBottom: '0.8rem'}}></div>\n          <AddVoter instance={myWeb3Api.contract} admin={admin} workflowStatus={workflowStatus}/>\n          <AddProposal instance={myWeb3Api.contract} voter={account} workflowStatus={workflowStatus}/>\n          <VoteProposal instance={myWeb3Api.contract} voter={account} workflowStatus={workflowStatus}/>\n          <TallyVotes instance={myWeb3Api.contract} admin={admin} setWorkflowStatus={(ws) => setWorkflowStatus(ws)} workflowStatus={workflowStatus}/>\n          <Getter instance={myWeb3Api.contract} voter={account} workflowStatus={workflowStatus}/>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}